{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santo\\\\Language tutor\\\\frontend\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = ({\n  quiz\n}) => {\n  _s();\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [score, setScore] = useState(null);\n  const [submitting, setSubmitting] = useState(false);\n\n  // Reset state when a new quiz is passed in\n  useEffect(() => {\n    setSelectedAnswers({});\n    setScore(null);\n  }, [quiz]);\n  const handleAnswerChange = (questionIndex, answer) => {\n    setSelectedAnswers({\n      ...selectedAnswers,\n      [questionIndex]: answer\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setSubmitting(true);\n    try {\n      const response = await api.post('/quiz/submit', selectedAnswers);\n      setScore(response.data.score);\n    } catch (error) {\n      console.error(\"Failed to submit quiz\", error);\n      // Handle error display to the user\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  const renderQuestions = () => {\n    if (!quiz || !quiz.questions) return null;\n    try {\n      const questions = JSON.parse(quiz.questions);\n      return questions.map((q, index) => {\n        const questionParts = q.split('\\n');\n        const questionText = questionParts[0];\n        const choices = questionParts.slice(1);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-medium\",\n            children: [index + 1, \". \", questionText]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col mt-2 space-y-2\",\n            children: choices.map((choice, choiceIndex) => /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"flex items-center cursor-pointer\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `question-${index}`,\n                value: choice,\n                onChange: () => handleAnswerChange(index, choice),\n                checked: selectedAnswers[index] === choice,\n                className: \"mr-2\",\n                disabled: score !== null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: choice\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this)]\n            }, choiceIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this);\n      });\n    } catch (e) {\n      console.error(\"Failed to parse quiz questions\", e);\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500\",\n        children: \"Error displaying quiz questions.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-white rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4 text-gray-800\",\n      children: \"Comprehension Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), !quiz ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500\",\n      children: \"No quiz available. Ask the tutor to generate one after a story!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this) : score !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-blue-600\",\n        children: \"Quiz Complete!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-2xl font-bold mt-4\",\n        children: [\"Your Score: \", score.toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-blue-600\",\n        children: quiz.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [renderQuestions(), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"mt-6 w-full p-2 bg-green-500 text-white rounded-md hover:bg-green-600 disabled:bg-gray-400\",\n          disabled: submitting,\n          children: submitting ? 'Submitting...' : 'Submit Answers'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"YVpJ6ozFXtHmLdpyhdP5Enh4/jA=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","Quiz","quiz","_s","selectedAnswers","setSelectedAnswers","score","setScore","submitting","setSubmitting","handleAnswerChange","questionIndex","answer","handleSubmit","e","preventDefault","response","post","data","error","console","renderQuestions","questions","JSON","parse","map","q","index","questionParts","split","questionText","choices","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","choice","choiceIndex","type","name","value","onChange","checked","disabled","toFixed","title","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/santo/Language tutor/frontend/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport api from '../services/api';\n\nconst Quiz = ({ quiz }) => {\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [score, setScore] = useState(null);\n  const [submitting, setSubmitting] = useState(false);\n\n  // Reset state when a new quiz is passed in\n  useEffect(() => {\n    setSelectedAnswers({});\n    setScore(null);\n  }, [quiz]);\n\n  const handleAnswerChange = (questionIndex, answer) => {\n    setSelectedAnswers({\n      ...selectedAnswers,\n      [questionIndex]: answer,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setSubmitting(true);\n    try {\n      const response = await api.post('/quiz/submit', selectedAnswers);\n      setScore(response.data.score);\n    } catch (error) {\n      console.error(\"Failed to submit quiz\", error);\n      // Handle error display to the user\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const renderQuestions = () => {\n    if (!quiz || !quiz.questions) return null;\n    try {\n      const questions = JSON.parse(quiz.questions);\n      return questions.map((q, index) => {\n        const questionParts = q.split('\\n');\n        const questionText = questionParts[0];\n        const choices = questionParts.slice(1);\n        return (\n          <div key={index} className=\"mt-4\">\n            <p className=\"font-medium\">{index + 1}. {questionText}</p>\n            <div className=\"flex flex-col mt-2 space-y-2\">\n              {choices.map((choice, choiceIndex) => (\n                <label key={choiceIndex} className=\"flex items-center cursor-pointer\">\n                  <input\n                    type=\"radio\"\n                    name={`question-${index}`}\n                    value={choice}\n                    onChange={() => handleAnswerChange(index, choice)}\n                    checked={selectedAnswers[index] === choice}\n                    className=\"mr-2\"\n                    disabled={score !== null}\n                  />\n                  <span>{choice}</span>\n                </label>\n              ))}\n            </div>\n          </div>\n        );\n      });\n    } catch (e) {\n      console.error(\"Failed to parse quiz questions\", e);\n      return <p className=\"text-red-500\">Error displaying quiz questions.</p>;\n    }\n  };\n\n  return (\n    <div className=\"p-6 bg-white rounded-lg shadow-md\">\n      <h2 className=\"text-xl font-bold mb-4 text-gray-800\">Comprehension Quiz</h2>\n      {!quiz ? (\n        <p className=\"text-gray-500\">No quiz available. Ask the tutor to generate one after a story!</p>\n      ) : score !== null ? (\n        <div className=\"text-center\">\n          <h3 className=\"text-lg font-semibold text-blue-600\">Quiz Complete!</h3>\n          <p className=\"text-2xl font-bold mt-4\">Your Score: {score.toFixed(2)}%</p>\n        </div>\n      ) : (\n        <div>\n          <h3 className=\"text-lg font-semibold text-blue-600\">{quiz.title}</h3>\n          <form onSubmit={handleSubmit}>\n            {renderQuestions()}\n            <button type=\"submit\" className=\"mt-6 w-full p-2 bg-green-500 text-white rounded-md hover:bg-green-600 disabled:bg-gray-400\" disabled={submitting}>\n              {submitting ? 'Submitting...' : 'Submit Answers'}\n            </button>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Quiz;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACzB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACAC,SAAS,CAAC,MAAM;IACdQ,kBAAkB,CAAC,CAAC,CAAC,CAAC;IACtBE,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;EAEV,MAAMQ,kBAAkB,GAAGA,CAACC,aAAa,EAAEC,MAAM,KAAK;IACpDP,kBAAkB,CAAC;MACjB,GAAGD,eAAe;MAClB,CAACO,aAAa,GAAGC;IACnB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBN,aAAa,CAAC,IAAI,CAAC;IACnB,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,IAAI,CAAC,cAAc,EAAEb,eAAe,CAAC;MAChEG,QAAQ,CAACS,QAAQ,CAACE,IAAI,CAACZ,KAAK,CAAC;IAC/B,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C;IACF,CAAC,SAAS;MACRV,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAMY,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAACnB,IAAI,IAAI,CAACA,IAAI,CAACoB,SAAS,EAAE,OAAO,IAAI;IACzC,IAAI;MACF,MAAMA,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACtB,IAAI,CAACoB,SAAS,CAAC;MAC5C,OAAOA,SAAS,CAACG,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAK;QACjC,MAAMC,aAAa,GAAGF,CAAC,CAACG,KAAK,CAAC,IAAI,CAAC;QACnC,MAAMC,YAAY,GAAGF,aAAa,CAAC,CAAC,CAAC;QACrC,MAAMG,OAAO,GAAGH,aAAa,CAACI,KAAK,CAAC,CAAC,CAAC;QACtC,oBACEhC,OAAA;UAAiBiC,SAAS,EAAC,MAAM;UAAAC,QAAA,gBAC/BlC,OAAA;YAAGiC,SAAS,EAAC,aAAa;YAAAC,QAAA,GAAEP,KAAK,GAAG,CAAC,EAAC,IAAE,EAACG,YAAY;UAAA;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1DtC,OAAA;YAAKiC,SAAS,EAAC,8BAA8B;YAAAC,QAAA,EAC1CH,OAAO,CAACN,GAAG,CAAC,CAACc,MAAM,EAAEC,WAAW,kBAC/BxC,OAAA;cAAyBiC,SAAS,EAAC,kCAAkC;cAAAC,QAAA,gBACnElC,OAAA;gBACEyC,IAAI,EAAC,OAAO;gBACZC,IAAI,EAAE,YAAYf,KAAK,EAAG;gBAC1BgB,KAAK,EAAEJ,MAAO;gBACdK,QAAQ,EAAEA,CAAA,KAAMlC,kBAAkB,CAACiB,KAAK,EAAEY,MAAM,CAAE;gBAClDM,OAAO,EAAEzC,eAAe,CAACuB,KAAK,CAAC,KAAKY,MAAO;gBAC3CN,SAAS,EAAC,MAAM;gBAChBa,QAAQ,EAAExC,KAAK,KAAK;cAAK;gBAAA6B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1B,CAAC,eACFtC,OAAA;gBAAAkC,QAAA,EAAOK;cAAM;gBAAAJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA,GAVXE,WAAW;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAWhB,CACR;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA,GAjBEX,KAAK;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAkBV,CAAC;MAEV,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOxB,CAAC,EAAE;MACVM,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEL,CAAC,CAAC;MAClD,oBAAOd,OAAA;QAAGiC,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAgC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IACzE;EACF,CAAC;EAED,oBACEtC,OAAA;IAAKiC,SAAS,EAAC,mCAAmC;IAAAC,QAAA,gBAChDlC,OAAA;MAAIiC,SAAS,EAAC,sCAAsC;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3E,CAACpC,IAAI,gBACJF,OAAA;MAAGiC,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAA+D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAC9FhC,KAAK,KAAK,IAAI,gBAChBN,OAAA;MAAKiC,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BlC,OAAA;QAAIiC,SAAS,EAAC,qCAAqC;QAAAC,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvEtC,OAAA;QAAGiC,SAAS,EAAC,yBAAyB;QAAAC,QAAA,GAAC,cAAY,EAAC5B,KAAK,CAACyC,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC,gBAENtC,OAAA;MAAAkC,QAAA,gBACElC,OAAA;QAAIiC,SAAS,EAAC,qCAAqC;QAAAC,QAAA,EAAEhC,IAAI,CAAC8C;MAAK;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrEtC,OAAA;QAAMiD,QAAQ,EAAEpC,YAAa;QAAAqB,QAAA,GAC1Bb,eAAe,CAAC,CAAC,eAClBrB,OAAA;UAAQyC,IAAI,EAAC,QAAQ;UAACR,SAAS,EAAC,4FAA4F;UAACa,QAAQ,EAAEtC,UAAW;UAAA0B,QAAA,EAC/I1B,UAAU,GAAG,eAAe,GAAG;QAAgB;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnC,EAAA,CA3FIF,IAAI;AAAAiD,EAAA,GAAJjD,IAAI;AA6FV,eAAeA,IAAI;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}