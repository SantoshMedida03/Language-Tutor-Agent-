{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santo\\\\Language tutor\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const handleSend = async () => {\n    if (input.trim()) {\n      const newMessages = [...messages, {\n        text: input,\n        sender: 'user'\n      }];\n      setMessages(newMessages);\n      setInput('');\n      const response = await api.post('/chat', {\n        text: input\n      });\n      setMessages([...newMessages, {\n        text: response.data.message,\n        sender: 'bot'\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.sender,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      onKeyPress: e => e.key === 'Enter' && handleSend()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","api","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","input","setInput","handleSend","trim","newMessages","text","sender","response","post","data","message","children","map","msg","index","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onKeyPress","key","onClick","_c","$RefreshReg$"],"sources":["C:/Users/santo/Language tutor/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState } from 'react';\nimport api from '../services/api';\n\nconst Chat = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  const handleSend = async () => {\n    if (input.trim()) {\n      const newMessages = [...messages, { text: input, sender: 'user' }];\n      setMessages(newMessages);\n      setInput('');\n\n      const response = await api.post('/chat', { text: input });\n\n      setMessages([...newMessages, { text: response.data.message, sender: 'bot' }]);\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        {messages.map((msg, index) => (\n          <div key={index} className={msg.sender}>\n            {msg.text}\n          </div>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        onKeyPress={(e) => e.key === 'Enter' && handleSend()}\n      />\n      <button onClick={handleSend}>Send</button>\n    </div>\n  );\n};\n\nexport default Chat;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAIF,KAAK,CAACG,IAAI,CAAC,CAAC,EAAE;MAChB,MAAMC,WAAW,GAAG,CAAC,GAAGN,QAAQ,EAAE;QAAEO,IAAI,EAAEL,KAAK;QAAEM,MAAM,EAAE;MAAO,CAAC,CAAC;MAClEP,WAAW,CAACK,WAAW,CAAC;MACxBH,QAAQ,CAAC,EAAE,CAAC;MAEZ,MAAMM,QAAQ,GAAG,MAAMd,GAAG,CAACe,IAAI,CAAC,OAAO,EAAE;QAAEH,IAAI,EAAEL;MAAM,CAAC,CAAC;MAEzDD,WAAW,CAAC,CAAC,GAAGK,WAAW,EAAE;QAAEC,IAAI,EAAEE,QAAQ,CAACE,IAAI,CAACC,OAAO;QAAEJ,MAAM,EAAE;MAAM,CAAC,CAAC,CAAC;IAC/E;EACF,CAAC;EAED,oBACEX,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EACGb,QAAQ,CAACc,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBnB,OAAA;QAAiBoB,SAAS,EAAEF,GAAG,CAACP,MAAO;QAAAK,QAAA,EACpCE,GAAG,CAACR;MAAI,GADDS,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNxB,OAAA;MACEyB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAErB,KAAM;MACbsB,QAAQ,EAAGC,CAAC,IAAKtB,QAAQ,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,UAAU,EAAGF,CAAC,IAAKA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAIxB,UAAU,CAAC;IAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,eACFxB,OAAA;MAAQgC,OAAO,EAAEzB,UAAW;MAAAS,QAAA,EAAC;IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV,CAAC;AAACtB,EAAA,CAlCID,IAAI;AAAAgC,EAAA,GAAJhC,IAAI;AAoCV,eAAeA,IAAI;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}