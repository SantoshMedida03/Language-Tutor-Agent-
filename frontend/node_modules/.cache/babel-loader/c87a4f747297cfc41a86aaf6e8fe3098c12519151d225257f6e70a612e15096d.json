{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santo\\\\Language tutor\\\\frontend\\\\src\\\\components\\\\Vocabulary.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Vocabulary = () => {\n  _s();\n  const [vocab, setVocab] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchVocab = async () => {\n      try {\n        const response = await api.get('/vocab');\n        setVocab(response.data);\n      } catch (error) {\n        console.error(\"Failed to fetch vocabulary\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchVocab();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-white rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-2\",\n      children: \"Your Vocabulary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : vocab.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: vocab.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"mt-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [item.word, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), \" \", item.meaning]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No vocabulary yet. Start chatting to build your list!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Vocabulary, \"X75bIYEKKWB5B+Y12Ji0xPTbfzU=\");\n_c = Vocabulary;\nexport default Vocabulary;\nvar _c;\n$RefreshReg$(_c, \"Vocabulary\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","Vocabulary","_s","vocab","setVocab","loading","setLoading","fetchVocab","response","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","index","word","meaning","_c","$RefreshReg$"],"sources":["C:/Users/santo/Language tutor/frontend/src/components/Vocabulary.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport api from '../services/api';\n\nconst Vocabulary = () => {\n  const [vocab, setVocab] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchVocab = async () => {\n      try {\n        const response = await api.get('/vocab');\n        setVocab(response.data);\n      } catch (error) {\n        console.error(\"Failed to fetch vocabulary\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchVocab();\n  }, []);\n\n  return (\n    <div className=\"p-4 bg-white rounded-lg shadow-md\">\n      <h2 className=\"text-xl font-bold mb-2\">Your Vocabulary</h2>\n      {loading ? (\n        <p>Loading...</p>\n      ) : vocab.length > 0 ? (\n        <ul>\n          {vocab.map((item, index) => (\n            <li key={index} className=\"mt-1\">\n              <strong>{item.word}:</strong> {item.meaning}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No vocabulary yet. Start chatting to build your list!</p>\n      )}\n    </div>\n  );\n};\n\nexport default Vocabulary;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,GAAG,CAACW,GAAG,CAAC,QAAQ,CAAC;QACxCL,QAAQ,CAACI,QAAQ,CAACE,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD,CAAC,SAAS;QACRL,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKa,SAAS,EAAC,mCAAmC;IAAAC,QAAA,gBAChDd,OAAA;MAAIa,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC1Db,OAAO,gBACNL,OAAA;MAAAc,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GACff,KAAK,CAACgB,MAAM,GAAG,CAAC,gBAClBnB,OAAA;MAAAc,QAAA,EACGX,KAAK,CAACiB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBtB,OAAA;QAAgBa,SAAS,EAAC,MAAM;QAAAC,QAAA,gBAC9Bd,OAAA;UAAAc,QAAA,GAASO,IAAI,CAACE,IAAI,EAAC,GAAC;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACG,IAAI,CAACG,OAAO;MAAA,GADpCF,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELlB,OAAA;MAAAc,QAAA,EAAG;IAAqD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC5D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChB,EAAA,CArCID,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AAuChB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}