{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santo\\\\Language tutor\\\\frontend\\\\src\\\\components\\\\Progress.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Progress = () => {\n  _s();\n  const [progress, setProgress] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchProgress = async () => {\n      try {\n        const response = await api.get('/progress');\n        setProgress(response.data);\n      } catch (error) {\n        console.error(\"Failed to fetch progress\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProgress();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-white rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-2\",\n      children: \"Your Progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : progress.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: progress.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"mt-1\",\n        children: [item.date, \": \", item.words_learned, \" words learned (Accuracy: \", item.quiz_accuracy * 100, \"%)\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No progress yet. Complete a quiz to see your progress!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Progress, \"1UBYadZF2hq3uUuKCJCHWskRcr0=\");\n_c = Progress;\nexport default Progress;\nvar _c;\n$RefreshReg$(_c, \"Progress\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","Progress","_s","progress","setProgress","loading","setLoading","fetchProgress","response","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","index","date","words_learned","quiz_accuracy","_c","$RefreshReg$"],"sources":["C:/Users/santo/Language tutor/frontend/src/components/Progress.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport api from '../services/api';\n\nconst Progress = () => {\n  const [progress, setProgress] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchProgress = async () => {\n      try {\n        const response = await api.get('/progress');\n        setProgress(response.data);\n      } catch (error) {\n        console.error(\"Failed to fetch progress\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchProgress();\n  }, []);\n\n  return (\n    <div className=\"p-4 bg-white rounded-lg shadow-md\">\n      <h2 className=\"text-xl font-bold mb-2\">Your Progress</h2>\n      {loading ? (\n        <p>Loading...</p>\n      ) : progress.length > 0 ? (\n        <ul>\n          {progress.map((item, index) => (\n            <li key={index} className=\"mt-1\">\n              {item.date}: {item.words_learned} words learned (Accuracy: {item.quiz_accuracy * 100}%)\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No progress yet. Complete a quiz to see your progress!</p>\n      )}\n    </div>\n  );\n};\n\nexport default Progress;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,GAAG,CAACW,GAAG,CAAC,WAAW,CAAC;QAC3CL,WAAW,CAACI,QAAQ,CAACE,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD,CAAC,SAAS;QACRL,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKa,SAAS,EAAC,mCAAmC;IAAAC,QAAA,gBAChDd,OAAA;MAAIa,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxDb,OAAO,gBACNL,OAAA;MAAAc,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GACff,QAAQ,CAACgB,MAAM,GAAG,CAAC,gBACrBnB,OAAA;MAAAc,QAAA,EACGX,QAAQ,CAACiB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACxBtB,OAAA;QAAgBa,SAAS,EAAC,MAAM;QAAAC,QAAA,GAC7BO,IAAI,CAACE,IAAI,EAAC,IAAE,EAACF,IAAI,CAACG,aAAa,EAAC,4BAA0B,EAACH,IAAI,CAACI,aAAa,GAAG,GAAG,EAAC,IACvF;MAAA,GAFSH,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELlB,OAAA;MAAAc,QAAA,EAAG;IAAsD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC7D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChB,EAAA,CArCID,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAuCd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}