{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santo\\\\Language tutor\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Header from '../components/Header';\nimport Chat from '../components/Chat';\nimport Story from '../components/Story';\nimport Quiz from '../components/Quiz';\nimport Vocabulary from '../components/Vocabulary';\nimport Progress from '../components/Progress';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [story, setStory] = useState(null);\n  const [quiz, setQuiz] = useState(null);\n\n  // This function runs on initial load and on refresh\n  const loadDashboard = useCallback(async () => {\n    try {\n      // Fetch story first\n      const storyResponse = await api.get('/story');\n      setStory(storyResponse.data && storyResponse.data.id ? storyResponse.data : null);\n\n      // Then fetch the quiz\n      const quizResponse = await api.get('/quiz');\n      setQuiz(quizResponse.data && quizResponse.data.id ? quizResponse.data : null);\n    } catch (error) {\n      console.error(\"Failed to load dashboard data\", error);\n      setStory(null);\n      setQuiz(null);\n    }\n  }, []);\n\n  // This function is for refreshing data after a chat interaction\n  const refreshData = useCallback(async () => {\n    try {\n      const quizResponse = await api.get('/quiz');\n      setQuiz(quizResponse.data && quizResponse.data.id ? quizResponse.data : null);\n    } catch (error) {\n      console.error(\"Failed to refresh data\", error);\n    }\n  }, []);\n\n  // Load initial data when the component mounts\n  useEffect(() => {\n    loadDashboard();\n  }, [loadDashboard]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-grow container mx-auto p-4 lg-p-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-3 gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lg:col-span-2\",\n          children: /*#__PURE__*/_jsxDEV(Chat, {\n            onDataUpdate: refreshData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col gap-6\",\n          children: [/*#__PURE__*/_jsxDEV(Story, {\n            story: story\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Quiz, {\n            quiz: quiz\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Vocabulary, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Progress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"DiB/diz8yDcljJucaYnshmQYJ9I=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Header","Chat","Story","Quiz","Vocabulary","Progress","api","jsxDEV","_jsxDEV","Dashboard","_s","story","setStory","quiz","setQuiz","loadDashboard","storyResponse","get","data","id","quizResponse","error","console","refreshData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDataUpdate","_c","$RefreshReg$"],"sources":["C:/Users/santo/Language tutor/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport Header from '../components/Header';\nimport Chat from '../components/Chat';\nimport Story from '../components/Story';\nimport Quiz from '../components/Quiz';\nimport Vocabulary from '../components/Vocabulary';\nimport Progress from '../components/Progress';\nimport api from '../services/api';\n\nconst Dashboard = () => {\n  const [story, setStory] = useState(null);\n  const [quiz, setQuiz] = useState(null);\n\n  // This function runs on initial load and on refresh\n  const loadDashboard = useCallback(async () => {\n    try {\n      // Fetch story first\n      const storyResponse = await api.get('/story');\n      setStory(storyResponse.data && storyResponse.data.id ? storyResponse.data : null);\n\n      // Then fetch the quiz\n      const quizResponse = await api.get('/quiz');\n      setQuiz(quizResponse.data && quizResponse.data.id ? quizResponse.data : null);\n    } catch (error) {\n      console.error(\"Failed to load dashboard data\", error);\n      setStory(null);\n      setQuiz(null);\n    }\n  }, []);\n\n  // This function is for refreshing data after a chat interaction\n  const refreshData = useCallback(async () => {\n    try {\n      const quizResponse = await api.get('/quiz');\n      setQuiz(quizResponse.data && quizResponse.data.id ? quizResponse.data : null);\n    } catch (error) {\n      console.error(\"Failed to refresh data\", error);\n    }\n  }, []);\n\n  // Load initial data when the component mounts\n  useEffect(() => {\n    loadDashboard();\n  }, [loadDashboard]);\n\n  return (\n    <div className=\"flex flex-col bg-gray-100\">\n      <Header />\n      <main className=\"flex-grow container mx-auto p-4 lg-p-6\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          \n          <div className=\"lg:col-span-2\">\n            <Chat onDataUpdate={refreshData} />\n          </div>\n\n          <div className=\"flex flex-col gap-6\">\n            <Story story={story} />\n            <Quiz quiz={quiz} />\n            <Vocabulary />\n            <Progress />\n          </div>\n\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,GAAG,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACA,MAAMkB,aAAa,GAAGhB,WAAW,CAAC,YAAY;IAC5C,IAAI;MACF;MACA,MAAMiB,aAAa,GAAG,MAAMV,GAAG,CAACW,GAAG,CAAC,QAAQ,CAAC;MAC7CL,QAAQ,CAACI,aAAa,CAACE,IAAI,IAAIF,aAAa,CAACE,IAAI,CAACC,EAAE,GAAGH,aAAa,CAACE,IAAI,GAAG,IAAI,CAAC;;MAEjF;MACA,MAAME,YAAY,GAAG,MAAMd,GAAG,CAACW,GAAG,CAAC,OAAO,CAAC;MAC3CH,OAAO,CAACM,YAAY,CAACF,IAAI,IAAIE,YAAY,CAACF,IAAI,CAACC,EAAE,GAAGC,YAAY,CAACF,IAAI,GAAG,IAAI,CAAC;IAC/E,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDT,QAAQ,CAAC,IAAI,CAAC;MACdE,OAAO,CAAC,IAAI,CAAC;IACf;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMS,WAAW,GAAGxB,WAAW,CAAC,YAAY;IAC1C,IAAI;MACF,MAAMqB,YAAY,GAAG,MAAMd,GAAG,CAACW,GAAG,CAAC,OAAO,CAAC;MAC3CH,OAAO,CAACM,YAAY,CAACF,IAAI,IAAIE,YAAY,CAACF,IAAI,CAACC,EAAE,GAAGC,YAAY,CAACF,IAAI,GAAG,IAAI,CAAC;IAC/E,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAvB,SAAS,CAAC,MAAM;IACdiB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnB,oBACEP,OAAA;IAAKgB,SAAS,EAAC,2BAA2B;IAAAC,QAAA,gBACxCjB,OAAA,CAACR,MAAM;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVrB,OAAA;MAAMgB,SAAS,EAAC,wCAAwC;MAAAC,QAAA,eACtDjB,OAAA;QAAKgB,SAAS,EAAC,uCAAuC;QAAAC,QAAA,gBAEpDjB,OAAA;UAAKgB,SAAS,EAAC,eAAe;UAAAC,QAAA,eAC5BjB,OAAA,CAACP,IAAI;YAAC6B,YAAY,EAAEP;UAAY;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC,eAENrB,OAAA;UAAKgB,SAAS,EAAC,qBAAqB;UAAAC,QAAA,gBAClCjB,OAAA,CAACN,KAAK;YAACS,KAAK,EAAEA;UAAM;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACvBrB,OAAA,CAACL,IAAI;YAACU,IAAI,EAAEA;UAAK;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACpBrB,OAAA,CAACJ,UAAU;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACdrB,OAAA,CAACH,QAAQ;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACnB,EAAA,CAzDID,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AA2Df,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}