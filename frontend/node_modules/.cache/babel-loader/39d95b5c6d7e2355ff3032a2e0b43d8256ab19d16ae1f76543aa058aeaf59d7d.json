{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cherry\\\\Desktop\\\\Language-Tutor-Agent-\\\\frontend\\\\src\\\\components\\\\Vocabulary.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Vocabulary = () => {\n  _s();\n  const [vocab, setVocab] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchVocab = async () => {\n      setError('');\n      try {\n        const response = await api.get('/vocab');\n        setVocab(response.data);\n      } catch (err) {\n        setError('Failed to load vocabulary.');\n        console.error(\"Failed to fetch vocabulary\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchVocab();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-white rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4 text-gray-800\",\n      children: \"My Vocabulary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-h-48 overflow-y-auto\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this) : vocab.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"space-y-2\",\n        children: vocab.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"border-b pb-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-semibold text-gray-700\",\n            children: item.word\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600\",\n            children: item.meaning\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"No vocabulary yet. Start chatting to build your list!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Vocabulary, \"9P5OzkHq4YHKpUOTa8R7JKvKTaE=\");\n_c = Vocabulary;\nexport default Vocabulary;\nvar _c;\n$RefreshReg$(_c, \"Vocabulary\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","Vocabulary","_s","vocab","setVocab","loading","setLoading","error","setError","fetchVocab","response","get","data","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","index","word","meaning","_c","$RefreshReg$"],"sources":["C:/Users/Cherry/Desktop/Language-Tutor-Agent-/frontend/src/components/Vocabulary.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from '../services/api';\r\n\r\nconst Vocabulary = () => {\r\n  const [vocab, setVocab] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchVocab = async () => {\r\n      setError('');\r\n      try {\r\n        const response = await api.get('/vocab');\r\n        setVocab(response.data);\r\n      } catch (err) {\r\n        setError('Failed to load vocabulary.');\r\n        console.error(\"Failed to fetch vocabulary\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchVocab();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"p-6 bg-white rounded-lg shadow-md\">\r\n      <h2 className=\"text-xl font-bold mb-4 text-gray-800\">My Vocabulary</h2>\r\n      <div className=\"max-h-48 overflow-y-auto\">\r\n        {loading ? (\r\n          <p className=\"text-gray-500\">Loading...</p>\r\n        ) : error ? (\r\n          <p className=\"text-red-500\">{error}</p>\r\n        ) : vocab.length > 0 ? (\r\n          <ul className=\"space-y-2\">\r\n            {vocab.map((item, index) => (\r\n              <li key={index} className=\"border-b pb-1\">\r\n                <p className=\"font-semibold text-gray-700\">{item.word}</p>\r\n                <p className=\"text-sm text-gray-600\">{item.meaning}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p className=\"text-gray-500\">No vocabulary yet. Start chatting to build your list!</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Vocabulary;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}